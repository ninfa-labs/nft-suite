# Full reference https://github.com/foundry-rs/foundry/tree/master/config

[profile.default]
    auto_detect_solc = false
    bytecode_hash = "none"                                                         # ipfs (default) https://book.getfoundry.sh/reference/config/solidity-compiler#bytecode_hash
    evm_version = "paris"
    fuzz = { runs = 1_000 }
    gas_reports = ["*"]
    optimizer = true
    optimizer_runs = 4_194_304                                                     # a larger “runs” parameter will produce longer but more gas efficient code. The maximum value of the parameter is 2**32-1.
    script = "script"
    solc = "0.8.28"
    via_ir = true

# this sets the `yulDetails` of the `optimizer_details` for the `default` profile
[profile.default.optimizer_details.yulDetails]
    stackAllocation = true
    optimizerSteps = 'dhfoDgvulfnTUtnIf'

[profile.lite.optimizer_details.yulDetails]
    yul = false
    optimizerSteps = ''
    optimizerRuns = 200

[profile.ci]
    auto_detect_solc = false
    bytecode_hash = "none"                                                         # ipfs (default) https://book.getfoundry.sh/reference/config/solidity-compiler#bytecode_hash
    evm_version = "paris"
    fuzz = { runs = 1_000 }
    gas_reports = ["*"]
    optimizer = true
    optimizer_runs = 4_194_304                                                     # a larger “runs” parameter will produce longer but more gas efficient code. The maximum value of the parameter is 2**32-1.
    script = "script"
    solc = "0.8.28"
    verbosity = 4
    via_ir = true

[profile.ci.optimizer_details.yulDetails]
    stackAllocation = true
    optimizerSteps = 'dhfoDgvulfnTUtnIf'

[profile.coverage]
    auto_detect_solc = false
    solc = "0.8.28"
    evm_version = "paris"
    bytecode_hash = "none"
    script = "script"
    fuzz = { runs = 1_000 }

    # Typically for coverage, set optimizer = false or minimal
    optimizer = false

    # If you do want IR-based compilation for coverage with minimal optimization,
    # set via_ir = "ir-minimum" in the command line or here:
    via_ir = true  # Not recommended for coverage unless you do --ir-minimum
    # via_ir = false

[etherscan]
    arbitrum = { key = "${API_KEY_ARBISCAN}", url = "https://api.arbiscan.io/api/" }
    avalanche = { key = "${API_KEY_SNOWTRACE" }
    bsc = { key = "${API_KEY_BSCSCAN}" }
    mainnet = { key = "${API_KEY_ETHERSCAN}", chain = "mainnet", url = "https://api.etherscan.io/api/" }
    goerli = { key = "${API_KEY_ETHERSCAN}", chain = "goerli", url = "https://api-goerli.etherscan.io/api/" }
    optimism = { key = "${API_KEY_OPTIMISTIC_ETHERSCAN}" }
    polygon = { key = "${API_KEY_POLYGONSCAN}" }
    sepolia = { key = "${API_KEY_ETHERSCAN}", chain = "sepolia", url = "https://api-sepolia.etherscan.io/api/" }
    base = { key = "${API_KEY_BASESCAN}", url = "https://api.basescan.org/api/" }
    base_goerli = { key = "${API_KEY_BASESCAN_GOERLI}", url = "https://api-goerli.basescan.org/api/" }

[fmt]
    bracket_spacing = true
    int_types = "long"
    line_length = 120
    multiline_func_header = "all"
    number_underscore = "thousands"
    quote_style = "double"
    tab_width = 4
    wrap_comments = true

[rpc_endpoints]
    arbitrum = "https://arbitrum-one-rpc.publicnode.com" # "https://arbitrum-mainnet.infura.io/v3/${API_KEY_INFURA}"
    arbitrum-sepolia = "https://arbitrum-sepolia.infura.io/v3/${API_KEY_INFURA}"
    avalanche = "https://avalanche-c-chain-rpc.publicnode.com" # "https://avalanche-mainnet.infura.io/v3/${API_KEY_INFURA}"
    base = "https://mainnet.base.org" # base = "https://dark-solitary-shape.base-mainnet.discover.quiknode.pro/{API_KEY_QUICKNODE}"
    base_goerli = "https://goerli.base.org"
    bnb_smart_chain = "https://bsc-dataseed.binance.org"
    bsc = "https://bsc-dataseed.binance.org"
    gnosis_chain = "https://rpc.gnosischain.com"
    goerli = "https://goerli.infura.io/v3/${API_KEY_INFURA}"
    localhost = "http://localhost:8545"
    mainnet = "https://mainnet.infura.io/v3/${API_KEY_INFURA}" # "https://eth-mainnet.g.alchemy.com/v2/${API_KEY_ALCHEMY}"
    optimism = "https://optimism-rpc.publicnode.com" # optimism = "https://optimism-mainnet.infura.io/v3/${API_KEY_INFURA}"
    polygon = "https://polygon-bor-rpc.publicnode.com" # polygon = "https://polygon-mainnet.infura.io/v3/${API_KEY_INFURA}"
    sepolia = "https://ethereum-sepolia-rpc.publicnode.com" # sepolia = "https://sepolia.infura.io/v3/${API_KEY_INFURA}"
